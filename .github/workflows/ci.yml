name: '▶️ CI/CD'

on: [push, workflow_dispatch]

jobs:
  lint-test:
    name: Check lint test
    if: ${{ !contains(github.ref, 'staging') && !contains(github.ref, 'master') }}
    container: node:lts-slim
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "🎨 Running lint scripts"
          cd api
          npm install
          npm run lint
          echo "✅ hurray, application follows standard convention"

  unit-test:
    name: Check Unit test
    if: ${{ contains(github.ref, 'staging')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "🎨 Running automatic test scripts"
          cd api
          npm install
          npm run test
          echo "✅ hurray, application is bug free"

  staging-build-push:
    name: Staging build & push
    if: ${{ contains(github.ref, 'staging')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "🎨 Build docker image & push on registry"
          cd api/
          cp .env.example .env
          sed -i "/^APP_NAME=/c\APP_NAME=PenguinProject" .env
          sed -i "/^HOST=/c\HOST=api.penguin.com" .env
          export
          cat .env
          ls
          echo "✅ DONE "

  staging-deploy:
    name: Staging Deploy
    if: ${{ contains(github.ref, 'staging')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "🎨 Deploy container"
          cd api/
          cp .env.example .env
          sed -i "/^APP_NAME=/c\APP_NAME=PenguinProject" .env
          sed -i "/^HOST=/c\HOST=api.penguin.com" .env
          export
          cat .env
          ls
          echo "✅ DONE "
